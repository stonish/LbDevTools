stages:
  - test
  - deploy

centos7:
  except:
    - tags
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:centos7
  script:
    - python --version
    - pip install -e .
    - python setup.py nosetests --cover-package ${CI_PROJECT_NAME}
    - mkdir -p cover_report && mv -f cover cover_report/$CI_JOB_NAME
  artifacts:
    paths:
      - cover_report
    when: always
    expire_in: 1 week

slc5:
  except:
    - tags
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:slc5
  script:
    - python --version
    - pip install -e .
    - python setup.py nosetests --cover-package ${CI_PROJECT_NAME}
    - mkdir -p cover_report && mv -f cover cover_report/$CI_JOB_NAME
  artifacts:
    paths:
      - cover_report
    when: always
    expire_in: 1 week

python2.7:
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-2.7
  script:
    - python --version
    - pip install -e .
    - python setup.py nosetests --cover-package ${CI_PROJECT_NAME}
    - mkdir -p cover_report && mv -f cover cover_report/$CI_JOB_NAME
    - python setup.py bdist_wheel --dist-dir public/${CI_PROJECT_NAME,,}
  artifacts:
    paths:
      - cover_report
      - public
    when: always
    expire_in: 1 week

python3.5:
  except:
    - tags
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-3.5
  script:
    - python --version
    - pip install -e .
    - python setup.py nosetests --cover-package ${CI_PROJECT_NAME}
    - mkdir -p cover_report && mv -f build/lib/cover cover_report/$CI_JOB_NAME
  artifacts:
    paths:
      - cover_report
    when: always
    expire_in: 1 week

python3.6:
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-3.6
  script:
    - python --version
    - pip install -e .
    - python setup.py nosetests --cover-package ${CI_PROJECT_NAME}
    - mkdir -p cover_report && mv -f build/lib/cover cover_report/$CI_JOB_NAME
    - python setup.py sdist --dist-dir public/${CI_PROJECT_NAME,,}
    - python setup.py bdist_wheel --dist-dir public/${CI_PROJECT_NAME,,}
  artifacts:
    paths:
      - cover_report
      - public
    when: always
    expire_in: 1 week

# see https://gitlab.cern.ch/gitlabci-examples/deploy_eos for the details
# of the configuration
deploy-packages:
  stage: deploy
  only:
    - tags
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  script:
    - test -z "$EOS_ACCOUNT_USERNAME" -o -z "$EOS_ACCOUNT_PASSWORD" -o -z "$EOS_PATH" && exit 0 || true
    # Script that performs the deploy to EOS. Makes use of the variables defined in the project
    # It will copy the generated content to the folder in EOS
    - deploy-eos
  # do not run any globally defined before_script or after_script for this step
  before_script: []
  after_script: []
